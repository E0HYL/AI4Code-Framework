#!/usr/bin/env python
# -*- encoding: utf-8 -*-
'''
@File    :   DomainKnowledge.py
@Time    :   2021/10/10 19:01:11
@Author  :   Yiling He
@Version :   1.0
@Contact :   heyilinge0@gmail.com
@License :   (C)Copyright 2021
@Desc    :   None
'''

# here put the import lib
import os
import pandas as pd


current_path = os.path.split(os.path.realpath(__file__))[0]

def get_resource(name):
    df = pd.read_csv(os.path.join(current_path, f'unique_{name}.txt'), header=None)
    return list(df[0])


# ADAGIO Android Application Graph-based Classification
# instructionSet.py >> Dalvik intstruction set and corresponding categories
# Copyright (c) 2013 Hugo Gascon <hgascon@uni-goettingen.de>

INSTRUCTION_CLASS_COLOR = {
	'nop': 0,
	'move': 1,
	'return': 2,
	'monitor': 3,
	'test': 4,
	'new': 5,
	'throw': 6,
	'jump': 7,
	'branch': 8,
	'arrayop': 9,
	'instanceop': 10,
	'staticop': 11,
	'invoke': 12,
	'unop': 13,
	'binop': 14
	} 

INSTRUCTION_CLASSES = [
	'nop',
	'move',
	'return',
	'monitor',
	'test',
	'new',
	'throw',
	'jump',
	'branch',
	'arrayop',
	'instanceop',
	'staticop',
	'invoke',
	'unop',
	'binop'
	]

INSTRUCTION_SET_COLOR = {
	'nop': 0,
	'move': 1,
	'move/from16': 1,
	'move/16': 1,
	'move-wide': 1,
	'move-wide/from16': 1,
	'move-wide/16': 1,
	'move-object': 1,
	'move-object/from16': 1,
	'move-object/16': 1,
	'move-result': 1,
	'move-result-wide': 1,
	'move-result-object': 1,
	'move-exception': 1,
	'return-void': 2,
	'return': 2,
	'return-wide': 2,
	'return-object': 2,
	'const/4': 1,
	'const/16': 1,
	'const': 1,
	'const/high16': 1,
	'const-wide/16': 1,
	'const-wide/32': 1,
	'const-wide': 1,
	'const-wide/high16': 1,
	'const-string': 1,
	'const-string/jumbo': 1,
	'const-class': 1,
	'monitor-enter': 3,
	'monitor-exit': 3,
	'check-cast': 4,
	'instance-of': 4,
	'array-length': 1,
	'new-instance': 5,
	'new-array': 5,
	'filled-new-array': 1,
	'filled-new-array/range': 1,
	'fill-array-data': 1,
	'fill-array-data-payload': 1,
	'throw': 6,
	'goto': 7,
	'goto/16': 7,
	'goto/32': 7,
	'packed-switch': 7,
	'packed-switch-payload': 7,
	'sparse-switch': 7,
	'sparse-switch-payload': 7,
	'cmpl-float': 7,
	'cmpg-float': 7,
	'cmpl-double': 7,
	'cmpg-double': 7,
	'cmp-long': 7,
	'if-eq': 8,
	'if-ne': 8,
	'if-lt': 8,
	'if-ge': 8,
	'if-gt': 8,
	'if-le': 8,
	'if-eqz': 8,
	'if-nez': 8,
	'if-ltz': 8,
	'if-gez': 8,
	'if-gtz': 8,
	'if-lez': 8,
	'aget': 9,
	'aget-wide': 9,
	'aget-object': 9,
	'aget-boolean': 9,
	'aget-byte': 9,
	'aget-char': 9,
	'aget-short': 9,
	'aput': 9,
	'aput-wide': 9,
	'aput-object': 9,
	'aput-boolean': 9,
	'aput-byte': 9,
	'aput-char': 9,
	'aput-short': 9,
	'iget': 10,
	'iget-wide': 10,
	'iget-object': 10,
	'iget-boolean': 10,
	'iget-byte': 10,
	'iget-char': 10,
	'iget-short': 10,
	'iput': 10,
	'iput-wide': 10,
	'iput-object': 10,
	'iput-boolean': 10,
	'iput-byte': 10,
	'iput-char': 10,
	'iput-short': 10,
	'sget': 11,
	'sget-wide': 11,
	'sget-object': 11,
	'sget-boolean': 11,
	'sget-byte': 11,
	'sget-char': 11,
	'sget-short': 11,
	'sput': 11,
	'sput-wide': 11,
	'sput-object': 11,
	'sput-boolean': 11,
	'sput-byte': 11,
	'sput-char': 11,
	'sput-short': 11,
	'invoke-virtual': 12,
	'invoke-super': 12,
	'invoke-direct': 12,
	'invoke-static': 12,
	'invoke-interface': 12,
	'invoke-virtual/range': 12,
	'invoke-super/range': 12,
	'invoke-direct/range': 12,
	'invoke-static/range': 12,
	'invoke-interface/range': 12,
	'neg-int': 13,
	'not-int': 13,
	'neg-long': 13,
	'not-long': 13,
	'neg-float': 13,
	'neg-double': 13,
	'int-to-long': 13,
	'int-to-float': 13,
	'int-to-double': 13,
	'long-to-int': 13,
	'long-to-float': 13,
	'long-to-double': 13,
	'float-to-int': 13,
	'float-to-long': 13,
	'float-to-double': 13,
	'double-to-int': 13,
	'double-to-long': 13,
	'double-to-float': 13,
	'int-to-byte': 13,
	'int-to-char': 13,
	'int-to-short': 13,
	'add-int': 14,
	'sub-int': 14,
	'mul-int': 14,
	'div-int': 14,
	'rem-int': 14,
	'and-int': 14,
	'or-int': 14,
	'xor-int': 14,
	'shl-int': 14,
	'shr-int': 14,
	'ushr-int': 14,
	'add-long': 14,
	'sub-long': 14,
	'mul-long': 14,
	'div-long': 14,
	'rem-long': 14,
	'and-long': 14,
	'or-long': 14,
	'xor-long': 14,
	'shl-long': 14,
	'shr-long': 14,
	'ushr-long': 14,
	'add-float': 14,
	'sub-float': 14,
	'mul-float': 14,
	'div-float': 14,
	'rem-float': 14,
	'add-double': 14,
	'sub-double': 14,
	'mul-double': 14,
	'div-double': 14,
	'rem-double': 14,
	'add-int/2addr': 14,
	'sub-int/2addr': 14,
	'mul-int/2addr': 14,
	'div-int/2addr': 14,
	'rem-int/2addr': 14,
	'and-int/2addr': 14,
	'or-int/2addr': 14,
	'xor-int/2addr': 14,
	'shl-int/2addr': 14,
	'shr-int/2addr': 14,
	'ushr-int/2addr': 14,
	'add-long/2addr': 14,
	'sub-long/2addr': 14,
	'mul-long/2addr': 14,
	'div-long/2addr': 14,
	'rem-long/2addr': 14,
	'and-long/2addr': 14,
	'or-long/2addr': 14,
	'xor-long/2addr': 14,
	'shl-long/2addr': 14,
	'shr-long/2addr': 14,
	'ushr-long/2addr': 14,
	'add-float/2addr': 14,
	'sub-float/2addr': 14,
	'mul-float/2addr': 14,
	'div-float/2addr': 14,
	'rem-float/2addr': 14,
	'add-double/2addr': 14,
	'sub-double/2addr': 14,
	'mul-double/2addr': 14,
	'div-double/2addr': 14,
	'rem-double/2addr': 14,
	'add-int/lit16': 14,
	'rsub-int': 14,
	'mul-int/lit16': 14,
	'div-int/lit16': 14,
	'rem-int/lit16': 14,
	'and-int/lit16': 14,
	'or-int/lit16': 14,
	'xor-int/lit16': 14,
	'add-int/lit8': 14,
	'rsub-int/lit8': 14,
	'mul-int/lit8': 14,
	'div-int/lit8': 14,
	'rem-int/lit8': 14,
	'and-int/lit8': 14,
	'or-int/lit8': 14,
	'xor-int/lit8': 14,
	'shl-int/lit8': 14,
	'shr-int/lit8': 14,
	'ushr-int/lit8': 14
	}