#!/usr/bin/env python
# -*- encoding: utf-8 -*-
'''
@File    :   hinDroid.py
@Time    :   2021/10/11 14:08:09
@Author  :   Yiling He
@Version :   1.0
@Contact :   heyilinge0@gmail.com
@License :   (C)Copyright 2021
@Desc    :   None
'''

# here put the import lib
from ai4code.utils import get_hash_from_file
from ai4code.features.preprocessing.android import APKAnalyzer


class HinDroidAnalyzer(APKAnalyzer): # node classification
    def __init__(self, apkpath, ana_obj=None):
        super(HinDroidAnalyzer, self).__init__(apkpath, ana_obj=ana_obj)
        self.features = self.get_features()

    def analyze_method_APIs(self):
        # APISet = set()
        coexist_api_sets = [] # list of (method_api_)sets
        invoke_approaches = dict()

        for method in self.get_mxs()["userdefi"]:
            method_api_set = set()
            
            method_apis = {} # offset: api_name
            method_invokes = {} # offset: invoke_approach
            
            for _, xref_to_method, offset in method.get_xref_to():
                xref_to_method = xref_to_method.full_name
                method_apis[offset] = xref_to_method
                method_api_set.add(xref_to_method)
            
            for idx, ins in method.get_method().get_instructions_idx():
                if ins.get_name().startswith('invoke'):
                    method_invokes[idx] = ins.get_name() # opcode: invoke-*

            for current_offset, invoke_approach in method_invokes.items():
                try:
                    current_api = method_apis[current_offset]
                except KeyError:
                    print("WARNING: method not found at offset %d" % current_offset)
                if not invoke_approaches.get(current_api):
                    invoke_approaches[current_api] = invoke_approach

            if len(method_api_set): coexist_api_sets.append(method_api_set)
            # APISet.update(method_api_set)

        return [coexist_api_sets, invoke_approaches] # APISet: invoke_approaches.keys()

    def get_features(self):
        features = [get_hash_from_file(self.filepath)] + self.analyze_method_APIs()
        return features

        




    